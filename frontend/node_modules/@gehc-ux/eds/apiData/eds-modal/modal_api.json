{
  "EDSModal": {
    "events": [
      {
        "name": "eds-modal-open",
        "privacy": "public",
        "description": "fired when modal window is opened\n"
      },
      {
        "name": "eds-modal-close",
        "privacy": "public",
        "description": "fired when modal window is closed\n"
      },
      {
        "name": "eds-modal-accept-action",
        "privacy": "public",
        "description": "fired on click of accept action button\n"
      },
      {
        "name": "eds-modal-reject-action",
        "privacy": "public",
        "description": "fired on click of reject action button\n"
      },
      {
        "name": "eds-modal-checkbox-changed",
        "privacy": "public",
        "description": "fired on change of a checkbox in the modal\n"
      }
    ],
    "properties": [
      {
        "name": "acceptLabel",
        "privacy": "public",
        "description": "Label for the confirm action button.\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "acceptState",
        "privacy": "public",
        "description": "Hide or show the accept button.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "border",
        "privacy": "public",
        "description": "Border type option: null | primary | secondary | tertiary | quaternary\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "checkboxChanged",
        "privacy": "public",
        "description": "Updates when the checkbox changes\n",
        "type": "boolean",
        "readonly": false
      },
      {
        "name": "disableAcceptState",
        "privacy": "public",
        "description": "Enable or disable the accept button.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "disableRejectState",
        "privacy": "public",
        "description": "Enable or disable the reject button.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "heading",
        "privacy": "public",
        "description": "Label for the modal heading\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "height",
        "privacy": "public",
        "description": "String for custom modal height. Accepts value in following formats,\n'4'|'4px'|'4rem'|'40%.\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "''"
      },
      {
        "name": "hideCloseButton",
        "privacy": "public",
        "description": "Hides the header close button\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isAnimated",
        "privacy": "public",
        "description": "Boolean that sets the animation class, this is set to false as a default.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isCustomScrollBar",
        "privacy": "public",
        "description": "boolean to add styles to customize scrollbar\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isManualCloseOnAccept",
        "privacy": "public",
        "description": "By default modal will close when accept button is clicked. By setting this to true, it will not close, user needs to listen to the `eds-modal-accept-action` event and close it manually by setting `isOpened` to false. This can be used in senario where there needs to validation done after accept is clicked before closing.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isOpened",
        "privacy": "public",
        "description": "Defines if the modal opens or closes.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "modalBackdrop",
        "privacy": "public",
        "description": "Indicates whether the modal is dismissable when user clicks on backdrop.\nEither 'dismiss' or 'static' are valid values.  'static' backdrop means that\nmodal will only dismiss from its action buttons.  Default value is 'dismiss'.",
        "type": "string",
        "readonly": false,
        "defaultValue": "'dismiss'"
      },
      {
        "name": "modeless",
        "privacy": "public",
        "description": "Used to notify the user of urgent information that demands the user's immediate attention, rather than a standard modal dialog\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "optionLabel",
        "privacy": "public",
        "description": "String for a checkbox inside the modal\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "''"
      },
      {
        "name": "rejectButtonStyle",
        "privacy": "public",
        "description": "Set rejection button style\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "rejectLabel",
        "privacy": "public",
        "description": "Label for the reject/deny action button.\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "rejectState",
        "privacy": "public",
        "description": "Enable or disable the reject button.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "target",
        "privacy": "public",
        "description": "DEPRECATED target that triggers the modal\n",
        "type": "unknown",
        "readonly": false
      },
      {
        "name": "width",
        "privacy": "public",
        "description": "String for custom modal width.\nwhen given a value, overrides the size property.\nAccepts value in following formats, '4'|'4px'|'4rem'|'40%.\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "''"
      },
      {
        "name": "size",
        "privacy": "public",
        "description": "",
        "type": "string",
        "readonly": false
      }
    ],
    "methods": [],
    "description": "The **modal** is a secondary window that allows users to perform specific actions, asks the user a question, or provides the user with information. A modal is displayed in a (higher) layer over the content of the parent screen from where it was initiated and requires users to complete the task or close the modal before continuing engagement with content in the parent (lower layer) screen.\n",
    "name": "Modal",
    "usage": "\n\n\nFor the user to be able to open the modal you will need to add a click event to the trigger element that will be opening the modal and set modal's isOpened property to true.\nFor example given this DOM tree\n\n```html\n<button class=\"button\" onclick=\"openModal()\">This opens the modal!</button>\n<eds-modal id=\"modal\"><p>Text goes here.</p></eds-modal>\n```\n\nYou can have the modal open when interacting with the button with the following vanilla JavaScript:\n\n```javascript\n var myModal = document.querySelector('#modal');\n\nfunction openModal() {\n   myModal.isOpened = true;\n}\n```\n\nNested modals are highly depreciated. In case of mandatory use, you may manage modal's events by preventing them with:\n\n```javascript\nfunction onEvent(event) {\n event.stopPropagation();\n event.preventDefault();\n}\n```\n\nAfter all is in place, the modal will be opened on click of the target (button)\n\nTo properly comply with accessibility standards be sure to manage focus states\nin your implementation. Most states are handled within the component itself,\nhowever, when the modal is closed you will need to manually set focus back to\nthe original element that opened it. In the case of this demo, that is\nthe, \"Open Modal\" button. This must be done at the implementation level because\nthe button is outside the scope of the component.\n\nThis component exposes an event called `eds-modal-close` when the modal is closed\nthat you can hook into to manage focus.\n\nAnimations: The modal activates on click by using the fade-in effect on the background, and the slide-down-in on the modal container to enter into view. Duration: The background enters at  100ms. The modal enters at 300ms.\n\nModal custom footer with slot:\nUser can now have custom modal footer by introducing slot inside modal footer.\n\nImportant note: If user keeps any of the default buttons (such as accept state, reject state) as true and also adds slot in modal footer then slot will get priority and will be displayed in footer. All default buttons won't be displayed.\n\nYou can introduce slot in modal footer as follows:\n\n```html\n<eds-modal id=\"modal\">\n<div slot=\"modal-footer\">\nCustom footer dom goes here inside.\n</div>\n</eds-modal>\n```\n\nThe following css variables are available for styling :\n\nCSS Variable | Description\n:----------------|:-------------\n--eds-modal-heading-color | Text color for Modal heading\n--eds-modal-backdrop-color | Backdrop color for Modal\n--eds-modal-background-color | Background color for Modal\n--eds-modal-shadow | Shadow around the Modal\n--eds-modal-shadow-modeless | Shadow around the Modal Modeless\n--eds-modal-icon-color | Icon color for Modal\n--eds-modal-text-color | Text color for Modal\n--eds-modal-border-color-default | Default border color for Modal\n--eds-modal-border-color-primary | Primary border color for Modal\n--eds-modal-border-color-seconday | Secondary border color for Modal\n--eds-modal-border-color-tertiary | Tertiary border color for Modal\n--eds-modal-border-color-quaternary | Quaternary border color for Modal\n\n",
    "browsers": "chrome, safari, firefox, ie11, edge",
    "version": "1.6.2"
  },
  "EDSModalModule": {
    "events": [
      {
        "name": "eds-modal-open",
        "privacy": "public",
        "description": "fired when modal window is opened\n"
      },
      {
        "name": "eds-modal-close",
        "privacy": "public",
        "description": "fired when modal window is closed\n"
      },
      {
        "name": "eds-modal-accept-action",
        "privacy": "public",
        "description": "fired on click of accept action button\n"
      },
      {
        "name": "eds-modal-reject-action",
        "privacy": "public",
        "description": "fired on click of reject action button\n"
      },
      {
        "name": "eds-modal-checkbox-changed",
        "privacy": "public",
        "description": "fired on change of a checkbox in the modal\n"
      }
    ],
    "properties": [],
    "methods": [],
    "version": "1.6.2"
  }
}