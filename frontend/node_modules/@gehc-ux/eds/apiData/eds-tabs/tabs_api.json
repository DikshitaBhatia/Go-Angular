{
  "EDSTabs": {
    "events": [
      {
        "name": "eds-tabs-tab-activated",
        "privacy": "public",
        "description": "Fired when a tab is activated outputs event detail\nwith the element of the tab panel. `event.detail` object contains:\n{\n label: {string} the tab item label,\n isDisabled: {boolean} indicates if the tab is disabled,\n index: {number} tab index of activated tab,\n uniqueId: {string} unique id of the activated tab\n}\n"
      },
      {
        "name": "eds-tabs-tab-removed",
        "privacy": "public",
        "description": "Fired when a tab is removed. Outputs event detail\nwith the element of the tab panel which is being removed.\n`event.detail` object contains:\n{\n  label: {string} the tab item label,\n  isDisabled: {boolean} indicates if the tab is disabled,\n  index: {number} tab index of removed tab,\n  uniqueId: {string} unique id of the removed tab\n}\n"
      }
    ],
    "properties": [
      {
        "name": "hasRemovableTabs",
        "privacy": "public",
        "description": "Controls whether tabs are removable. Default value is false. This value\nis ignored if tabsMode is modern -- modern tabs to not allow removable\ntabs.",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isStickyHeader",
        "privacy": "public",
        "description": "Allows the tabs header to be sticky when scrolling down tabs panels",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isVertical",
        "privacy": "public",
        "description": "Controls whether tabs are displayed vertical or horizontal. Default value is false meaning horizontal and when set to true, tabs are displayed vertically.",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "overflowMenuWidth",
        "privacy": "public",
        "description": "If overflow menu is needed in classic tab mode, you may optionally specify\nthe width of the menu items.  This is passed through to the `eds-menu` property\n`width`.  See `eds-menu` for details. Default value is 'auto'",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"auto\""
      },
      {
        "name": "preTabCloseValidatorFn",
        "privacy": "public",
        "description": "If specified, the function will be called just prior to a tab being\nremoved with a tab descriptor object which has the following properties:\n   {\n     label: (string as provided by the eds-tabs-item `label` attribute)\n     sortIndex: (integer representing the 0-based position of the tab),\n     tabItemRef: (a shadow DOM element representing the eds-tabs-item),\n     uniqueId: (string representing either the `unique-id` attribute of\n                 the eds-tabs-item, or else the same value as label.)\n   }\n\nIf this function is not specified, the tab will be removed from the tab\npanels immediately.\n",
        "type": "Function",
        "readonly": false
      },
      {
        "name": "tabLabelMaxWidth",
        "privacy": "public",
        "description": "The maximum width for tab labels can be specified using tabLabelMaxWidth.\nWhen a tab label is longer than tabLabelMaxWidth, an ellipsis is added to the label.\nWhen you hover over an ellipsed label, Popver will appear with the label's content.\n",
        "type": "any",
        "readonly": false
      },
      {
        "name": "tabsMode",
        "privacy": "public",
        "description": "The mode of tabs operation. Valid values are:\n  * classic -- tabs visually have a blue selection indicator above the\n  label and removable tabs are supported\n  * modern -- tabs visually have a blue selection indicator under the tab\n  label and removable tabs are not supported\n\nThe default mode is modern.\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"modern\""
      },
      {
        "name": "activeTabIndex",
        "privacy": "public",
        "description": "",
        "type": "\"number\"",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "activateTab",
        "privacy": "public",
        "description": "Activate tab by index or label. Fires the `eds-tabs-tab-activated`\nevent.",
        "args": [
          {
            "name": "tabRef"
          },
          {
            "name": "tabActionItem"
          }
        ],
        "return": {
          "type": "void"
        }
      },
      {
        "name": "removeTab",
        "privacy": "public",
        "description": "Completely remove a tab and its panel from the DOM.\nFires the `eds-tabs-tab-removed` event.",
        "args": [
          {
            "name": "tabRef"
          },
          {
            "name": "tabActionItem"
          }
        ],
        "return": {
          "type": "Promise"
        }
      }
    ],
    "description": "**Content tabs** are used as a way to navigate between multiple\ngroups of related content displayed within the same UI container or panel.\n",
    "name": "Tabs",
    "usage": "\nThe tabs component enables an application to show independent panel content\nby clicling on a tab button.\n\nKeyboard Accessibility\n- Right and left arrow keys cycles the user through tabs\n- When using arrow keys, Enter moves the user into the tab content (will not be visible)\n- Disabled tabs are skipped\n- On the last tab, hitting the right arrow key returns the user to the first tab\n- On the first tab, hitting the left arrow key moves the user to the last tab\n- The Home key returns the user to the first tab\n- The End key moves the user to the last tab\n- Enter/Space opens and close the overflow menu (if you have one)\n- Tab moves you through the overflow menu\n- ESC closes the overflow menu when the user is inside of it\n- Upon ESC inside an overflow menu focus is returned the menu toggle button\n\n`isDisabled` and `icon` are properties of eds-tabs-item child component. You need to set them as shown below to add those to template or look at Example 01 to see how to set them dynamically.\nEither every tab has unique icon or none of the tabs have icons. You cannot have few tabs with icons and few without icons.\n ```html\n <eds-tabs has-removable-tabs=\"true\" tabs-mode=\"classic\">\n\n   <eds-tabs-item label=\"Tab 1\" icon='{\"filename\":\"ico-fpo-16\"}'>\n     <div>Tab 1 tab panel content</div>\n   </eds-tabs-item>\n\n   <eds-tabs-item label=\"Tab 2\" icon='{\"filename\":\"ico-fpo-16\"}'>\n     <div>Tab 2 tab panel content</div>\n   </eds-tabs-item>\n\n   <eds-tabs-item label=\"Tab 3\" is-disabled=\"true\" icon='{\"filename\":\"ico-fpo-16\"}'>\n     <div>Tab 3 tab panel content</div>\n   </eds-tabs-item>\n\n </eds-tabs>\n```\n\n### Sticky Header use case\n\nIn some cases, when using tabs with sticky header, you'll need to set css variables manually.\n\nFirst, if you have padding/margin issues, you can set the `--eds-tabs-sticky-header-top-position` to suit your needs. By default, its value is set to 0px.\n\nCheck Tabs example nÂ°2 to see a case where setting this variable manually is needed.\n\nThen, when using modern tabs mode with sticky header, the header has a background color (while it's usually transparent) to avoid the scrolled text to overlap the tabs header's text.\n\nIf the default value doesn't suit your needs, you can set the `--eds-tabs-sticky-header-background-color` variable to the right color.\n\n\nThe following CSS variables are available for styling :\n\nCSS Variable | Description\n:----------------|:-------------\n--eds-tabs-box-shadow | Color of the surrounding box shadow\n--eds-tabs-box-shadow-classic | Color of the surrounding box shadow for the classic tabs\n--eds-tabs-tab-color | Text color of the tabs\n--eds-tabs-focus-color | Color of the border around the focused/hovered tab\n--eds-tabs-selected-color | Color of the thick border on the selected tab\n--eds-tabs-disabled-color | Color a disabled tab\n--eds-tabs-list-border-color | Color of the border around the tabs\n--eds-tabs-background-classic | Background color for the classic tabs\n--eds-tabs-border-classic | Border color for the classic tabs\n--eds-tabs-background-color | Background color of overall component\n--eds-tabs-close-button-color| Color of close button for removable tabs\n--eds-tabs-menu-icon-color | Color of icon for tabs menu\n--eds-tabs-menu-icon-background-color | Background color of icon for tabs menu\n--eds-tabs-menu-box-shadow | Color of box shadow for tabs menu\n--eds-tabs-menu-tab-background-color | Background color for tab in tabs menu\n",
    "browsers": "chrome, safari, firefox, ie11, edge",
    "workinprogress": "true",
    "version": "1.4.3"
  },
  "EDSTabsModule": {
    "events": [
      {
        "name": "eds-tabs-tab-activated",
        "privacy": "public",
        "description": "Fired when a tab is activated outputs event detail\nwith the element of the tab panel. `event.detail` object contains:\n{\n label: {string} the tab item label,\n isDisabled: {boolean} indicates if the tab is disabled,\n index: {number} tab index of activated tab,\n uniqueId: {string} unique id of the activated tab\n}\n"
      },
      {
        "name": "eds-tabs-tab-removed",
        "privacy": "public",
        "description": "Fired when a tab is removed. Outputs event detail\nwith the element of the tab panel which is being removed.\n`event.detail` object contains:\n{\n  label: {string} the tab item label,\n  isDisabled: {boolean} indicates if the tab is disabled,\n  index: {number} tab index of removed tab,\n  uniqueId: {string} unique id of the removed tab\n}\n"
      }
    ],
    "properties": [],
    "methods": [],
    "version": "1.4.3"
  }
}