{
  "EDSSearch": {
    "events": [
      {
        "name": "eds-search-term-submitted",
        "privacy": "public",
        "description": "Fired when `isSearchTrigger === true` and user either clicks\nthe search trigger icon or hits the `Enter` key. The detail object has the following format:\n```\n{\n term: string // the search term entered by the user\n}\n```"
      },
      {
        "name": "eds-search-change",
        "privacy": "public",
        "description": "fired when a new search value has been entered/selected from the menu. The\ndetail object has the following format:\n```\n{\n  value: string   //the underlying value\n  label: string,  //the string shown in the filter\n}\n```\n"
      },
      {
        "name": "eds-search-input",
        "privacy": "public",
        "description": "fired after each key stroke as you type in the input:\n```\n{\n term: string //current string in the input after last key stroke\n}\n```\n"
      },
      {
        "name": "eds-assisted-search-change",
        "privacy": "public",
        "description": "fired when a assisted search button is clicked. The\ndetail object has the following format:\n```\n{\n  type: string // the type of assisted search being used - either 'qrcode' or 'voice'\n}\n```\n"
      },
      {
        "name": "eds-search-input-clear",
        "privacy": "public",
        "description": "fired this event when user click on clear icon to clear the input\nfield for Search type \"type-in\" or when isSearchTrigger is true.\n"
      },
      {
        "name": "eds-search-advanced-search",
        "privacy": "public",
        "description": "fired this event when user click on advanced search icon,\nthis event helps user to make their own advanced setting panel or modal for further\nfilter of data before search.\n"
      },
      {
        "name": "eds-search-clear",
        "privacy": "public",
        "description": "fired this event when user clicks on advanced search cross icon.\n**Deprecated in favor of `eds-search-change` (with no detail)**"
      },
      {
        "name": "eds-search-input-focus",
        "privacy": "public",
        "description": "fired this event when user clicks or focus on search input field\n"
      }
    ],
    "properties": [
      {
        "name": "advancedSearchIcon",
        "privacy": "public",
        "description": "The icon used in `advanced-search` can be customized. The icon property reflects most of the `eds-icon` properties\nwith the following limitations:\n\nThese eds-icon properties are NOT supported:\n* name\n* stretch\n* applyCss\n* isDarkTheme\n* isAnimated\n\nIf `svgStyle` property is used, you may not specify the `height` nor `width`\nproperties. Due to the constraints of rendering the eds-select items, any\nicons used will be forced to 16px square.\n\nThe only required icon property is `filename`. If `loadMethod` is not\nprovided, then `\"name\"` will be used for `loadMethod`.\n\nFor more information on eds-icon properties, see the eds-icon documentation.\n\n```javascript\n  {\n   filename: string,\n   loadMethod?: string,\n   svgString?: string,\n   svgStyle?: string,\n   baseSvgPath?: string,\n   src?: string\n }\n```\n",
        "type": "Icon",
        "readonly": false,
        "defaultValue": "..."
      },
      {
        "name": "appendTo",
        "privacy": "public",
        "description": "appends search dropdown to any element (e.g. body) using css selector.\n",
        "type": "any",
        "readonly": false,
        "defaultValue": "null"
      },
      {
        "name": "assistedSearchType",
        "privacy": "public",
        "description": "When assisted search methods are supported, the standard search icon (magnifying glass)\nis repositioned to the left within the field and the assisted technology icon is positioned on the right\nwhere the search icon traditionally is located. Currently supported options are `qrcode` and `voice`.\n",
        "type": "union",
        "readonly": false,
        "defaultValue": "null"
      },
      {
        "name": "dropdownPanelMaxWidthPercent",
        "privacy": "public",
        "description": "sets the maximum width of dropdown panel by using\n`dropdownPanelMaxWidthPercent` property of underlying dropdown component.\n",
        "type": "number",
        "readonly": false,
        "defaultValue": "100"
      },
      {
        "name": "isActionTriggerForSelect",
        "privacy": "public",
        "description": "To add submit action button for a non-assisted select.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isAdvancedSearch",
        "privacy": "public",
        "description": "Appends an advanced search button to search\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isAdvancedSearchBadge",
        "privacy": "public",
        "description": "Appends an advanced search button to search\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isDarkTheme",
        "privacy": "public",
        "description": "Forces search to render in lights off theme\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isSearchTrigger",
        "privacy": "public",
        "description": "Appends an action button to search\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "notFoundText",
        "privacy": "public",
        "description": "custom text when search result is empty\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"No results found\""
      },
      {
        "name": "placeholder",
        "privacy": "public",
        "description": "placeholder text for search component",
        "type": "string",
        "readonly": false
      },
      {
        "name": "searchFunction",
        "privacy": "public",
        "description": "Custom search function. If search function is `searchStartsWith`\nthen it will return results that starts with the search keyword. If search\nfunction is `searchContains` then it will return results that contains the\nsearch keyword. The default value is `searchStartsWith`.\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"searchStartsWith\""
      },
      {
        "name": "searchItems",
        "privacy": "public",
        "description": "list of search options for search select list",
        "type": "array",
        "readonly": false
      },
      {
        "name": "searchTerm",
        "privacy": "public",
        "description": "Model for the search term; set it to empty will clear selection.\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"\""
      },
      {
        "name": "selectedValue",
        "privacy": "public",
        "description": "Model for the selected value; set it to null to clear the selection.\n",
        "type": "SelectItem",
        "readonly": false,
        "defaultValue": "null"
      },
      {
        "name": "tooltipContent",
        "privacy": "public",
        "description": "Tooltip content for advance search icon\n",
        "type": "string",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "focus",
        "privacy": "public",
        "description": "sends focus to the search input field\n",
        "args": [],
        "return": {
          "type": "void"
        }
      }
    ],
    "description": "",
    "name": "Search",
    "usage": "\n\nThe search component operates in two modes: 1) allows a user to search for\nitems from the provided `searchItems` array, or 2) allows for a user to type\nkeywords to search for items from an external source. These modes are mutually\nexclusive.\n\nTo search from a list of provided `searchItems`, you must provide this array\nof items with two properties, `value` and `label`, e.g.:\n`[{ value: '2', label: 'Treatment' }]`. When the user types, the results\nare filtered by matches in the `searchItems`.\n\nYou can set the data with the following vanilla JavaScript:\n\n```html\nvar select = document.querySelector('#search');\nsearch.searchItems = [{\"value\":1,\"label\":\"Option 1\",\"description\":\"Option 1 Description\"},{\"value\":2,\"label\":\"Option 2\",\"disabled\":true,\"description\":\"Option 2 Description\"}];\n```\n\nTo configure the eds-search component to trigger an external search, you\nneed to set `is-search-trigger=\"true\"`.  When configured this way, the\n`searchItems` is ignored. The component renders a slightly different search\nicon to distinguish this mode. When the user clicks the trigger search\nicon or hits the `Enter` key, the `eds-search-term-submitted` event is\nfired with a property `term` which contains the search term and may be used to\nget results from an external resource.\n\nThe following CSS variables are available for styling :\n\nCSS Variable | Description\n:----------------|:-------------\n--eds-search-action-button-background-color | Color for action button background when search trigger is true\n--eds-search-action-button-pressed-background-color | Color for action button background when pressed and search trigger is true\n--eds-search-action-button-border-color | Color for action button border when search trigger is true\n--eds-search-action-button-focused-border-color | Color for action button border when focused/hovered and search trigger is true\n--eds-search-action-button-pressed-border-color | Color for action button border when pressed and search trigger is true\n--eds-search-action-button-icon-color | Color for action button icon when search trigger is true\n\n",
    "browsers": "chrome, safari, firefox, ie11, edge",
    "workinprogress": "true",
    "version": "1.10.0"
  },
  "EDSSearchModule": {
    "events": [
      {
        "name": "eds-search-term-submitted",
        "privacy": "public",
        "description": "Fired when `isSearchTrigger === true` and user either clicks\nthe search trigger icon or hits the `Enter` key. The detail object has the following format:\n```\n{\n term: string // the search term entered by the user\n}\n```"
      },
      {
        "name": "eds-search-change",
        "privacy": "public",
        "description": "fired when a new search value has been entered/selected from the menu. The\ndetail object has the following format:\n```\n{\n  value: string   //the underlying value\n  label: string,  //the string shown in the filter\n}\n```\n"
      },
      {
        "name": "eds-search-input",
        "privacy": "public",
        "description": "fired after each key stroke as you type in the input:\n```\n{\n term: string //current string in the input after last key stroke\n}\n```\n"
      },
      {
        "name": "eds-assisted-search-change",
        "privacy": "public",
        "description": "fired when a assisted search button is clicked. The\ndetail object has the following format:\n```\n{\n  type: string // the type of assisted search being used - either 'qrcode' or 'voice'\n}\n```\n"
      },
      {
        "name": "eds-search-input-clear",
        "privacy": "public",
        "description": "fired this event when user click on clear icon to clear the input\nfield for Search type \"type-in\" or when isSearchTrigger is true.\n"
      },
      {
        "name": "eds-search-advanced-search",
        "privacy": "public",
        "description": "fired this event when user click on advanced search icon,\nthis event helps user to make their own advanced setting panel or modal for further\nfilter of data before search.\n"
      },
      {
        "name": "eds-search-clear",
        "privacy": "public",
        "description": "fired this event when user clicks on advanced search cross icon.\n**Deprecated in favor of `eds-search-change` (with no detail)**"
      },
      {
        "name": "eds-search-input-focus",
        "privacy": "public",
        "description": "fired this event when user clicks or focus on search input field\n"
      }
    ],
    "properties": [],
    "methods": [],
    "version": "1.10.0"
  }
}