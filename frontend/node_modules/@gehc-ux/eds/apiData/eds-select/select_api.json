{
  "EDSSelect": {
    "events": [
      {
        "name": "eds-select-add",
        "privacy": "public",
        "description": "fired when item is added while [isMultiple]=\"true\" and outputs\nadded item\n"
      },
      {
        "name": "eds-select-blur",
        "privacy": "public",
        "description": "fired on select blur\n"
      },
      {
        "name": "eds-select-change",
        "privacy": "public",
        "description": "fired on model change and outputs the whole model\n"
      },
      {
        "name": "eds-select-hyperlink-clicked",
        "privacy": "public",
        "description": "fired on hyperlink click\n"
      },
      {
        "name": "eds-select-close",
        "privacy": "public",
        "description": "fired on select dropdown close\n"
      },
      {
        "name": "eds-select-clear",
        "privacy": "public",
        "description": "fired on clear selection\n"
      },
      {
        "name": "eds-select-focus",
        "privacy": "public",
        "description": "fired on select focus\n"
      },
      {
        "name": "eds-select-search",
        "privacy": "public",
        "description": "fired on search input key press\n"
      },
      {
        "name": "eds-select-open",
        "privacy": "public",
        "description": "fired on select dropdown open\n"
      },
      {
        "name": "eds-select-remove",
        "privacy": "public",
        "description": "fired when item is removed while [isMultiple]=\"true\"\n"
      },
      {
        "name": "eds-select-scroll",
        "privacy": "public",
        "description": "fired when scrolled and provides the start and end index of\nthe currently available items\n"
      },
      {
        "name": "eds-select-scroll-to-end",
        "privacy": "public",
        "description": "fired when scrolled to the end of items\n"
      },
      {
        "name": "eds-select-filter-clear",
        "privacy": "public",
        "description": "fired on filter's clear icon clicked (with type `search` or `filter`)\n"
      },
      {
        "name": "eds-select-selected-all",
        "privacy": "public",
        "description": "fires when select all option is clicked\ndetail object has the following format:\n```\n{\n   selectedItems: array\n}\n```\n"
      }
    ],
    "properties": [
      {
        "name": "addDescriptionColumn",
        "privacy": "public",
        "description": "changes the panel to two column layout with option label in\nthe first column and option description label in the second column. Option\ndescription needs to be passed in items array with key 'description' for\neach option.\nEx: `{ value: 1, label: 'Option', description: 'Option Description' }`\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "appendTo",
        "privacy": "public",
        "description": "appends dropdown to any element(e.g. body) using css selector.\nFor correct positioning body should have position:relative\n",
        "type": "any",
        "readonly": false,
        "defaultValue": "null"
      },
      {
        "name": "bindLabel",
        "privacy": "public",
        "description": "object property to use for label\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"label\""
      },
      {
        "name": "bindValue",
        "privacy": "public",
        "description": "object property to use for selected model (binds to whole\nobject by default)\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "clearOptionText",
        "privacy": "public",
        "description": "Text to be used in first row of panel to clear or not select\nanything\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "closeOnSelect",
        "privacy": "public",
        "description": "close the dropdown when a value is selected\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "true"
      },
      {
        "name": "descriptionColumnHeaderText",
        "privacy": "public",
        "description": "text for the second column in 2 column layout for panel\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"Description\""
      },
      {
        "name": "dropdownPanelMaxWidthPercent",
        "privacy": "public",
        "description": "The width (in percentage) which sets the maximum width of\ndropdown panel with respect to the\nwidth of the dropdown input field. Min 100% (default) and maximum 150%.\nThis is not applicable in case of icon-only filter dropdown, as its maximum\nwidth is 250% in all cases.\n",
        "type": "number",
        "readonly": false,
        "defaultValue": "100"
      },
      {
        "name": "dropdownPosition",
        "privacy": "public",
        "description": "position of the dropdown:\n- auto\n- top\n- bottom\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"auto\""
      },
      {
        "name": "filterByInputPlaceholderText",
        "privacy": "public",
        "description": "Placeholder text for the input in filter mode",
        "type": "string",
        "readonly": false,
        "defaultValue": "FILTER_BY_INPUT_DEFAULT_PLACEHOLDER_TEXT"
      },
      {
        "name": "hideIcon",
        "privacy": "public",
        "description": "",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "icon",
        "privacy": "public",
        "description": "Icon used in place of the caret. Two different icons\ncan be used for opened/closed states\nThe following properties are accepted:\n{\n 'loadMethod': ,\n 'filename': ,\n 'svgString': ,\n 'svgStyle': ,\n 'baseSvgPath':\n}\nRefer to `eds-icon` for more information on those properties.  Additionally,\nthree properties on this object control the behavior in the select\ncomponent.  `doToggle` controls whether the icon is changed when the\nselect state is open or closed.  `openFilename` and `closedFilename` are\nused to specify which file is used in each state.\n",
        "type": "any",
        "readonly": false,
        "defaultValue": "..."
      },
      {
        "name": "isDarkTheme",
        "privacy": "public",
        "description": "forces dropdown to render in a lights-off theme\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isDisabled",
        "privacy": "public",
        "description": "whether the dropdown is disabled\n",
        "type": "boolean",
        "readonly": false
      },
      {
        "name": "isEditableSearchTerm",
        "privacy": "public",
        "description": "Allow to edit search query if option selected.\nDefault false. Works only if isMultiple is false.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isError",
        "privacy": "public",
        "description": "whether the dropdown is in error state\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isFixedHeaderColumns",
        "privacy": "public",
        "description": "To use fixed column header location when 'Add description column'\noption is enabled.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isMultiSelectFilterTags",
        "privacy": "public",
        "description": "multi select shown as filter tags when selected\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isMultiple",
        "privacy": "public",
        "description": "allows to select multiple items\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isOpened",
        "privacy": "public",
        "description": "whether the dropdown is opened\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isRequired",
        "privacy": "public",
        "description": "clearOptionText will display if false\nclearOptionText is hidden and users have to select one of the options if true.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isSelectAllEnabled",
        "privacy": "public",
        "description": "Boolean to show/hide the `Select All` option in the dropdown\nEven when multi select is enabled, this provides a way to hide the\n`Select All` option",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isSelectAllSelected",
        "privacy": "public",
        "description": "Boolean to select/deselect the `Select All` option\nFor use cases when `Select All` needs to be controlled programmatically\nEnabling this to true will select all options by default",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "isTypeInEnabled",
        "privacy": "public",
        "description": "This input is intended for EDS component development only! To\nget search behavior, use `type` input with `search` or `filter` value.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "itemMaxScrollHeight",
        "privacy": "public",
        "description": "displays maximum options in the dropdown panel, by default it\ndisplays 6 options including clear all option.\n",
        "type": "number",
        "readonly": false,
        "defaultValue": "6"
      },
      {
        "name": "items",
        "privacy": "public",
        "description": "The items array for the dropdown. Each item can have the following\nproperties. The icon property reflects most of the `eds-icon` properties\nwith the following limitations:\n\nThese eds-icon properties are NOT supported:\n* name\n* stretch\n* applyCss\n* isDarkTheme\n* isAnimated\n\nIf `svgStyle` property is used, you may not specify the `height` nor `width`\nproperties. Due to the constraints of rendering the eds-select items, any\nicons used will be forced to 16px square.\n\nThe only required icon property is `filename`.  If `loadMethod` is not\nprovided, then `\"name\"` will be used for `loadMethod`.\n\nFor more information on eds-icon properties, see the eds-icon documentation.\n\n```javascript\n  {\n    value?: string | number,\n    label?: string,\n    disabled?: boolean,\n    description?: string,\n    type?: 'hyperlink',\n    href?: string,\n    icon?: {\n      filename: string,\n      loadMethod?: string,\n      svgString?: string,\n      svgStyle?: string,\n      baseSvgPath?: string\n    }\n  }\n```\n",
        "type": "array",
        "readonly": false,
        "defaultValue": "[]"
      },
      {
        "name": "labelColumnHeaderText",
        "privacy": "public",
        "description": "text for the first column in 2 column layout for panel\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"Name\""
      },
      {
        "name": "labelIcon",
        "privacy": "public",
        "description": "Allows to have the dropdown\nThe following properties are accepted:\n{\n 'loadMethod': ,\n 'filename': ,\n 'svgString': ,\n 'svgStyle': ,\n 'baseSvgPath':\n}\nRefer to `eds-icon` for more information on those properties.\n",
        "type": "any",
        "readonly": false
      },
      {
        "name": "leftIcon",
        "privacy": "public",
        "description": "",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "markFirst",
        "privacy": "public",
        "description": "marks first item as focused when opening/filtering\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "true"
      },
      {
        "name": "multiSelectedText",
        "privacy": "public",
        "description": "custom text for number of items selected\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"selected\""
      },
      {
        "name": "multiSelectionDisplayMode",
        "privacy": "public",
        "description": "types in which items can be displayed in multiSelection mode\nsummary (number of items Selected)\nlisted (string consisted of comma separated items selected)\n",
        "type": "union",
        "readonly": false,
        "defaultValue": "\"summary\""
      },
      {
        "name": "notFoundText",
        "privacy": "public",
        "description": "custom text when search result is empty\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"No results found\""
      },
      {
        "name": "openOnEnter",
        "privacy": "public",
        "description": "opening up ng-select api which is only used in search\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "true"
      },
      {
        "name": "pinnedMode",
        "privacy": "public",
        "description": "Boolean to pin the selected items on top when set to true and\nwhen set to false selected items remain in the default sort order.\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "placeholder",
        "privacy": "public",
        "description": "placeholder text\n",
        "type": "string",
        "readonly": false
      },
      {
        "name": "preventClearOptionStyling",
        "privacy": "public",
        "description": "Prevents the \"clear\" option at the top of the panel from getting\nstyles (italic and grey)",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "searchFn",
        "privacy": "public",
        "description": "custom search function implementation.\n",
        "type": "Function",
        "readonly": false
      },
      {
        "name": "searchInputPlaceholderText",
        "privacy": "public",
        "description": "Placeholder text for the input in search mode",
        "type": "string",
        "readonly": false,
        "defaultValue": "SEARCH_INPUT_DEFAULT_PLACEHOLDER_TEXT"
      },
      {
        "name": "searchPanel",
        "privacy": "public",
        "description": "",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "selectAllText",
        "privacy": "public",
        "description": "custom text for select all option\n",
        "type": "string",
        "readonly": false,
        "defaultValue": "\"Select all\""
      },
      {
        "name": "selectOnTab",
        "privacy": "public",
        "description": "select marked dropdown item using tab\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "selectedValue",
        "privacy": "public",
        "description": "model for the selected value; when `isMultiple` is true the\ndefault value is an empty array, otherwise it is `null`; set it to `null`\nor empty array accordingly to clear the selection.\n",
        "type": "any",
        "readonly": false,
        "defaultValue": "null"
      },
      {
        "name": "type",
        "privacy": "public",
        "description": "type of select functionality\n- default\n- search\n- filter",
        "type": "SelectType",
        "readonly": false,
        "defaultValue": "SelectType.DEFAULT"
      },
      {
        "name": "virtualScroll",
        "privacy": "public",
        "description": "enables virtual scrolling for better performance (lot of data case)\n",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "panelHeaderInputPlaceholder",
        "privacy": "public",
        "description": "",
        "type": "\"string\"",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "close",
        "privacy": "public",
        "description": "closes the select\n",
        "args": [],
        "return": {
          "type": "void"
        }
      },
      {
        "name": "focus",
        "privacy": "public",
        "description": "focuses on the select\n",
        "args": [],
        "return": {
          "type": "void"
        }
      },
      {
        "name": "onIconClick",
        "privacy": "public",
        "description": "",
        "args": [
          {
            "name": "event",
            "description": ""
          }
        ],
        "return": {
          "type": "number",
          "description": ""
        }
      },
      {
        "name": "open",
        "privacy": "public",
        "description": "opens the select\n",
        "args": [],
        "return": {
          "type": "void"
        }
      }
    ],
    "description": "\nThe **dropdown** component, also known as **select**, is a form element that\nupon interaction opens a list of pre-determined value options from which the\nuser can choose. Selection(s) made by the user from this list associates said\n value(s) with the form field.\n",
    "name": "Dropdown",
    "usage": "\nFor the user to be able to load data onto select, you will need to\nprogrammatically pass the data the user will interact with\nYou can pass the data with the following vanilla JavaScript:\n\n\n```javascript\nvar select = document.querySelector('#select');\nselect.items = [{\"value\":1,\"label\":\"Option 1\",\"description\":\"Option 1 Description\"},{\"value\":2,\"label\":\"Option 2\",\"disabled\":true,\"description\":\"Option 2 Description\"}];\n```\n\nThe following css variables are available for styling :\n\nCSS Variable | Description\n:----------------|:-------------\n--eds-select-text-color | Color dropdown text\n--eds-select-border-color | Color for dropdown border\n--eds-select-hover-border-color | Color for dropdown border on hover\n--eds-select-border-focused-color | Color for dropdown border on focus\n--eds-select-option-marked-background-color | Color for dropdown background when option marked\n--eds-select-option-selected-text-color | Color for dropdown text when option selected\n--eds-select-option-selected-background-color | Color for dropdown background when option selected\n--eds-select-multiple-value-background-color | Color for dropdown background with multiple values\n--eds-select-multiple-value-border-color | Color for dropdown border with multiple values\n--eds-select-multiple-value-disabled-border-color | Color for dropdown border with multiple values when disabled is true\n--eds-select-option-disabled-color | Color for dropdown option when disabled state is true\n--eds-select-multiple-value-icon-background-color | Color for dropdown background with multiple values and icon\n--eds-select-multiple-value-icon-border-color |  Color for dropdown border with multiple values and icon\n--eds-select-placeholder-color | Color for dropdown placeholder text\n--eds-select-panel-border-color | Color for dropdown panel border\n--eds-select-panel-outer-shadow-color | Color for dropdown panel outer shadow\n--eds-select-header-row-text-color | Color for dropdown header row text\n--eds-select-header-row-border-color | Color for dropdown header row border\n--eds-select-background-color | Color for dropdown background\n--eds-select-disabled-background-color | Color for dropdown background when disable state is true\n--eds-select-disabled-text-color | Color for dropdown text when disabled state is true\n--eds-select-error-background-color | Color for dropdown background when error is true\n--eds-select-error-border-color | Color for dropdown border when error is true\n\n",
    "browsers": "chrome, safari, firefox, ie11, edge\n",
    "version": "1.11.2"
  },
  "EDSSelectModule": {
    "events": [
      {
        "name": "eds-select-add",
        "privacy": "public",
        "description": "fired when item is added while [isMultiple]=\"true\" and outputs\nadded item\n"
      },
      {
        "name": "eds-select-blur",
        "privacy": "public",
        "description": "fired on select blur\n"
      },
      {
        "name": "eds-select-change",
        "privacy": "public",
        "description": "fired on model change and outputs the whole model\n"
      },
      {
        "name": "eds-select-hyperlink-clicked",
        "privacy": "public",
        "description": "fired on hyperlink click\n"
      },
      {
        "name": "eds-select-close",
        "privacy": "public",
        "description": "fired on select dropdown close\n"
      },
      {
        "name": "eds-select-clear",
        "privacy": "public",
        "description": "fired on clear selection\n"
      },
      {
        "name": "eds-select-focus",
        "privacy": "public",
        "description": "fired on select focus\n"
      },
      {
        "name": "eds-select-search",
        "privacy": "public",
        "description": "fired on search input key press\n"
      },
      {
        "name": "eds-select-open",
        "privacy": "public",
        "description": "fired on select dropdown open\n"
      },
      {
        "name": "eds-select-remove",
        "privacy": "public",
        "description": "fired when item is removed while [isMultiple]=\"true\"\n"
      },
      {
        "name": "eds-select-scroll",
        "privacy": "public",
        "description": "fired when scrolled and provides the start and end index of\nthe currently available items\n"
      },
      {
        "name": "eds-select-scroll-to-end",
        "privacy": "public",
        "description": "fired when scrolled to the end of items\n"
      },
      {
        "name": "eds-select-filter-clear",
        "privacy": "public",
        "description": "fired on filter's clear icon clicked (with type `search` or `filter`)\n"
      },
      {
        "name": "eds-select-selected-all",
        "privacy": "public",
        "description": "fires when select all option is clicked\ndetail object has the following format:\n```\n{\n   selectedItems: array\n}\n```\n"
      }
    ],
    "properties": [],
    "methods": [],
    "version": "1.11.2"
  }
}