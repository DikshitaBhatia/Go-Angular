{
  "classes": [
    {
      "name": "datagrid",
      "description": "Class that wraps around the container than contains both utility container and ngx-datatable\n"
    },
    {
      "name": "datagrid__utility-container",
      "description": "Class that wraps utilities container (search, icons) above the ngx-datatable component\n"
    },
    {
      "name": "datagrid__utility-container--icons",
      "description": "Class that wraps the optional icons that can be placed in the utilitiy container\n"
    },
    {
      "name": "datagrid__utility-container--selected-box",
      "description": "Class that wraps the content that is left aligned in the utlity container\n"
    },
    {
      "name": "datagrid__utility-container--search-box",
      "description": "Class that wraps the content that is right aligned (search) in the utlity container\n"
    },
    {
      "name": "datagrid__grid-container",
      "description": "Class that wraps the container with ngx-datatable component \n"
    },
    {
      "name": "datagrid__small",
      "description": "Class for small size datagrid with top and bottom spacing of 8px placed on ngx-datatable selector\n"
    },
    {
      "name": "datagrid__regular",
      "description": "Class for regular size datagrid with top and bottom spacing of 12px placed on ngx-datatable selector\n"
    },
    {
      "name": "datagrid__large",
      "description": "Class for large size datagrid with top and bottom spacing of 16px placed on ngx-datatable selector\n"
    },
    {
      "name": "datagrid__grid-container--center",
      "description": "Class that wraps the container with ngx-datatable component \n"
    },
    {
      "name": "datagrid--expanded-row-placeholder",
      "description": "Class that wraps the container with ngx-datatable component \n"
    }
  ],
  "description": "\n ",
  "name": "Datagrid ",
  "usage": "\nDatagrid component was built using ngx-datatable (3rd party angular component). \nDue to the complexity of this component we will not be able to provide pure css \nonly code templates for this component. Instead we are providing all the classes \nwe wrapped on top of ngx-datatable and template examples we used to build Datagrid component. \nYou can use the above mentioned classes to wrap ngx-datatable styles in your Angular application \nand use default functionality of ngx-datatable.\n\nngx-datatable [documentation](https://swimlane.gitbook.io/ngx-datatable/ \"documentation\") \nand [demos](http://swimlane.github.io/ngx-datatable/ \"demos\") could be used to get a good \nunderstanding of the features and usage of ngx-datatable.\n\nFor more details on how to use ngx-datatable with EDS Datagrid styles visit examples\n[code](https://github.build.ge.com/gehc-ux/eds-examples-angular/tree/master/src/app/datagrid/example-05 \"code\") \nand [demo](https://ng-examples.edisondesignsystem.com/datagrid-example-05?theme=eds-lights-on \"demo\").\n\nCSS Only styles of EDS web components are available in css-only folder of final bundle. \nSo you need to load `eds/css-only/eds.min.css` to apply EDS Datagrid styles.\n\nStructure: To wrap component with EDS Datagrid styles use the HTML template as shown below:\n\n     <div class=\"datagrid\">\n        \t<div class=\"datagrid__utility-container\">\n    \t\t\t<div class=\"datagrid__utility-container--selected-box\">\n    \t\t\t</div>\n    \t\t\t<div class=\"datagrid__utility-container--icons\">\n    \t\t\t</div>\n    \t\t\t<div class=\"datagrid__utility-container--search-box\">\n    \t\t\t</div>\n        \t</div>\n        \t  <div class=\"datagrid__grid-container\">\n        \t\t  <ngx-datatable>\n        \t\t  </ngx-datatable>\n        \t</div>\n        </div>\n\n\n#### Table Size\n\nEDS Datagrid has three different sizes (small, regular, large). \nUse following classes to apply appropriate size.\n\n- `datagrid__small` - small datagrid with top and bottom spacing of 8px\n- `datagrid__regular` - regular datagrid with top and bottom spacing of 12px\n- `datagrid__large` - large datagrid with row top and bottom spacing of 16px\n\nExample: Large Size\n\n    <div class=\"datagrid\">\n      <div class=\"datagrid__grid-container\">\n        <ngx-datatable\n        class=\"datagrid__large\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        >\n        </ngx-datatable>\n      </div>\n    </div>\n\n#### Selection\n\nWhile there are several [selectionType](https://swimlane.gitbook.io/ngx-datatable/api/table/inputs#selectiontype \n\"selectionType\") options provided by ngx-datatable, eds-datatable styles only supports two of them \n(\"single\" and \"checkbox\") with the default being `null` which means rows cannot be selected. \nLook at the examples [code](https://github.build.ge.com/gehc-ux/eds-examples-angular/tree/master/src/app/datagrid/example-05 \"code\") \nand [demo](https://ng-examples.edisondesignsystem.com/datagrid-example-05?theme=eds-lights-on \"demo\") \nto see how \"single\" and \"checkbox\" options are implemented. The only difference is for \"checkbox\" selection, \neds-datagird will have single border around all the rows that were selected next to each other, \nbut ngx-datagrid with EDS Datagrid styles will have border around each individual row. This needs to \nbe implmented speretatley if you are just using EDS Datagrid styles. \n\n#### Inline Edit\n\nngx-datatable implementation of double click to edit cells can be found \n[here](http://swimlane.github.io/ngx-datatable/#inline-edit \"here\"). Inline editing with the \"pencil\" icon is an \nEDS Datagrid custom implementation and will need to be implemented if you want the exact look and feel. \nYou can look at the EDS Datagrid [template](https://github.build.ge.com/gehc-ux/eds-datagrid/blob/master/datagrid.html \"template\") and\n[TypeScript](https://github.build.ge.com/gehc-ux/eds-datagrid/blob/master/datagrid.ts \"TypeScrpit\") implementations as starting point.\n\n#### Search\nSearch is one of the features that was built on top of what ngx-datatable provides using \n[eds-search](https://eds.gehealthcare.com/search \"`eds-search`\") component. You can implement \nit by looking at EDS Datagrid [TypeScript](https://github.build.ge.com/gehc-ux/eds-datagrid/blob/master/datagrid.ts \"TypeScript\") \nto get the exact functionality using ngx-datatable. You can also look at ngx-datatable \n[implementation/example](http://swimlane.github.io/ngx-datatable/#filter \"implementation/example\") of \nfilter/search functionality.\n\n\n#### Pagination\n\nThere is default pagination present in ngx-datatable, but EDS Datagrid has a custom implementation \nof pagination that is based on this [resource](https://stackblitz.com/edit/angular-ngx-datatable-custom-paginator-ltqvk8 \"resource\"). \nPlease refer to the ngx-datatable documenation, and EDS Datagrid source code to create your own pagination implementation.\n\n#### Limitations \n\nSince custom functionality is added in EDS Datagrid on top of ngx-datatable based on our UX guidelines, \nyou might need to implement some of the features (popover, custom cell, multiline, inline edit with pencil icon, \npagination) in EDS Datagrid if you choose to not use web component and use ngx-datatable with EDS Datagrid styles instead.\n\nFeatures not mentioned above that exist in ngx-datable are not affected by EDS Datagrid styles. \n",
  "version": "1.23.0"
}