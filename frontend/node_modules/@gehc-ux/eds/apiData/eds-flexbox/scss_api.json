{
  "classes": [
    {
      "name": "flex",
      "description": "Sets a container to use flex for layout\n"
    },
    {
      "name": "inline--flex",
      "description": "Sets a container to use inline-flex for layout\n"
    },
    {
      "name": "flex--smallest",
      "description": "add display: flex to a container at 320px"
    },
    {
      "name": "flex--small",
      "description": "add display: flex to a container at 600px"
    },
    {
      "name": "flex--medium",
      "description": "add display: flex to a container at 960px"
    },
    {
      "name": "flex-large",
      "description": "add display: flex to a container at 1280px"
    },
    {
      "name": "flex--xlarge",
      "description": "add display: flex to a container at 1920px\n"
    },
    {
      "name": "inline-flex--smallest",
      "description": "add display: inline-flex to a container at 320px"
    },
    {
      "name": "inline-flex--small",
      "description": "add display: inline-flex to a container at 600px"
    },
    {
      "name": "inline-flex--medium",
      "description": "add display: inline-flex to a container at 960px"
    },
    {
      "name": "inline-flex-large",
      "description": "add display: inline-flex to a container at 1280px"
    },
    {
      "name": "inline-flex--xlarge",
      "description": "add display: inline-flex to a container at 1920px\n"
    },
    {
      "name": "flex--height--full",
      "description": "Set flex height to 100% of its container\n"
    },
    {
      "name": "flex--height--half",
      "description": "Set flex height to 50% of its container\n"
    },
    {
      "name": "flex__item",
      "description": "Sets a child to lay itself out using flex.\n"
    },
    {
      "name": "flex__item--msfix",
      "description": "forces IE to have the correct flexbox style. It should be used alongside `.flex__item`\n"
    }
  ],
  "description": "\nThe **flexbox component** exposes many features available in flexbox layouts to give elements sizes and dynamically put elements in the right place with simple, easy-to-use classes. Using flexbox, you can change the way a container's children lay themselves out, or style individual items directly to change how they flow in the document.\nFor a good introduction to flexbox, see the [CSS Tricks Complete Guide to Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/). Follow along below to learn about how the flexbox patterns can be applied to your project with simple classes.\n",
  "name": "Flexbox ",
  "usage": "\n The module contains classes for a flex container as well as classes for a flex item\n```html\n<!-- Basic Example -->\n<div class=\"flex\"></div>\n\n<!-- Basic Example with row modifier -->\n<div class=\"flex flex--row\"></div>\n\n<!-- Basic Example with row and wrapping modifiers -->\n<div class=\"flex flex--row flex--nowrap\"></div>\n\n<!-- Basic Example with row, wrapping, and horizontal alignment modifiers -->\n<div class=\"flex flex--row flex--nowrap flex--left\"></div>\n\n<!-- Basic Example with row, wrapping, horizontal alignment, and vertical alignment modifiers -->\n<div class=\"flex flex--row flex--nowrap flex--left flex--top\"></div>\n\n<!-- Basic Example with row, wrapping, horizontal alignment, vertical alignment, and child modifiers -->\n<div class=\"flex flex--row flex--nowrap flex--left flex--top flex--stretch--multi\"></div>\n\n<!-- Responsive example -->\n<div class=\"flex--large\"></div>\n```\n",
  "version": "1.0.4",
  "browsers": "chrome, safari, firefox, ie11, edge"
}