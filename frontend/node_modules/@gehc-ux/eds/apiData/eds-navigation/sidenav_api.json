{
  "EDSSideNav": {
    "events": [
      {
        "name": "eds-sidenav-main-item-selected",
        "privacy": "public",
        "description": "Fired when a main item is selected and the sub menu will open.\nThe detail object will contain the item that has been selected\n"
      },
      {
        "name": "eds-sidenav-sub-item-selected",
        "privacy": "public",
        "description": "Fired when a sub item (in the panel) is selected.\nThe detail object will contain the item that has been selected and its parent(s) in an array\n"
      },
      {
        "name": "eds-sidenav-item-selected",
        "privacy": "public",
        "description": "Fired when an item (in the panel) is selected.\nThe detail object will contain the item that has been selected and its parent(s) in an array\n"
      }
    ],
    "properties": [
      {
        "name": "auxiliaryCollapsedIcon",
        "privacy": "public",
        "description": "Optional property only used when using the optional slot for `auxiliary`.\nIf the `auxiliary` slot is used and the `auxiliaryCollapsedIcon` property\nis provided, this icon will render when using the collapsible sidenav.\nIf there is no `auxiliary` slot used, or if the `collapsible` property\nis not true, this property will be ignored.\n\nThe following properties are accepted:\n{\n 'loadMethod': ,\n 'filename': ,\n 'svgString': ,\n 'svgStyle': ,\n 'baseSvgPath':\n}\nRefer to `eds-icon` for more information on those properties.\n",
        "type": "any",
        "readonly": false
      },
      {
        "name": "collapsible",
        "privacy": "public",
        "description": "Setting for sidenav panel to be docked (closed)",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "expandItems",
        "privacy": "public",
        "description": "Items remain open and persistent",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "expandMultiple",
        "privacy": "public",
        "description": "Setting to allow multiple sidenav items to be expanded at the same time.",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "hideChevrons",
        "privacy": "public",
        "description": "Setting to hide chevrons",
        "type": "boolean",
        "readonly": false,
        "defaultValue": "false"
      },
      {
        "name": "items",
        "privacy": "public",
        "description": "Array of object defining the sidenav items. Each item defines a nav item, icon and\ncan have children. You can have no more than 3 total level of children. See example:\n```\n[\n {\n   label: 'my item',\n   isOpened: false,\n   isSelected: false,\n   children: [\n     {\n       label: 'my menu item 1',\n       isOpened: false,\n       children: [\n         {\n           label: 'my submenu item 1'\n         }\n       ]\n     },\n     {\n       label: 'my menu item 2'\n     }\n   ]\n }\n]\n```\n\nEach item or child can have an icon by adding an `icon` object to it.\nThis will create an `eds-icon` that can be configured through the `icon`\nobject defined. The following properties are accepted:\n```\nicon: {\n loadMethod: \"\",\n filename: \"\",\n svgString: \"\",\n svgStyle: \"\",\n baseSvgPath: \"\"\n}\n```\nPlease refer to `eds-icon` for more information on those properties\n\n* If an anchor is needed, add an href prop to the last level item:\n```\n[{\n label: 'my item',\n isOpened: false,\n isSelected: false,\n children: [{\n     label: 'my menu item 1',\n     isOpened: false,\n     children: [\n         {\n           label: 'my submenu item 1',\n           href: 'link submenu item 1'\n         }\n       ]\n   }, {\n     label: 'my menu item 2',\n     href: 'link menu item 2'\n   }\n ]\n}]\n```\n\nA target prop can also be added to specify anchor target:\n```\n[{\n label: 'my item',\n isOpened: false,\n isSelected: false,\n children: [{\n     label: 'my menu item 1',\n     isOpened: false,\n     children: [\n         {\n           label: 'my submenu item 1',\n           href: 'link submenu item 1',\n           target: '_blank'\n         }\n       ]\n   }, {\n     label: 'my menu item 2',\n     href: 'link menu item 2',\n     target: '_blank'\n   }\n ]\n}]\n```\n\nAvailable targets are:\n * `_self`: the current browsing context. (Default)\n * `_blank`: usually a new tab, but users can configure browsers to open a new window instead.\n * `_parent`: the parent browsing context of the current one. If no parent, behaves as _self.\n * `_top`: the topmost browsing context (the \"highest\" context thatâ€™s an ancestor of the current one). If no ancestors, behaves as _self.\n\nNote that href and target prop can be added to all nav items (first level included)\n\n\nAll of the item properties are optional, except `label` -- that which is\ndisplayed in the navigation component rows.  If you have a flat array,\nyou will have a flat list. If you provide a `children` property with an\narray of item objects  in the same format, you will have nested items.\nOnly 3 levels are allowed.\n\nAdding the property `groupEnd` with a value of `true` an item at the\ntop level will create visual separation after that row.\n\nAdditionally, you may pass any other data on the item object as your\napplication requires.  When any of the three events is fired upon\nclicking a sidenav selection, the item context you define as an element\nin this items array will be sent as `event.detail` in your event handler.\nFrom this object, your appliction can handle any logic necessary.\n\nDefault values for `isOpened` and `isSelected` are undefined.  As you\nnavigate with the component, they will be set to true/false.\n\n",
        "type": "array",
        "readonly": false
      },
      {
        "name": "location",
        "privacy": "public",
        "description": "The location of the masthead, sidebar or default",
        "type": "string",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "clickItem",
        "privacy": "public",
        "description": "Click (select) an item",
        "args": [
          {
            "name": "item"
          },
          {
            "name": "depth"
          },
          {
            "name": "event"
          },
          {
            "name": "mainItemIndex",
            "description": ""
          },
          {
            "name": "itemIndex",
            "description": ""
          },
          {
            "name": "subItemIndex",
            "description": ""
          }
        ],
        "return": {
          "type": "void"
        }
      },
      {
        "name": "selectItemAndParents",
        "privacy": "public",
        "description": "Select an item and all of its parents. Opens all of it parents.\nDeselects all other items at any level. Collapse all but the item's parents",
        "args": [
          {
            "name": "item"
          }
        ],
        "return": {}
      },
      {
        "name": "selectItemRecurs",
        "privacy": "public",
        "description": "recursive function to select a specific item (any level) and unselect/collapse\nall others. Return true if found, false otherwise. Fills the\n`parents` array with all parents to the selected item",
        "args": [
          {
            "name": "item"
          },
          {
            "name": "items"
          },
          {
            "name": "parents"
          }
        ],
        "return": {
          "type": "boolean"
        }
      },
      {
        "name": "triggerNavLoad",
        "privacy": "public",
        "description": "Method to load sidenav item on page refresh",
        "args": [
          {
            "name": "item"
          }
        ],
        "return": {
          "type": "void"
        }
      }
    ],
    "description": "**Side navigation** contains actions and functionality that\nenables the user to navigate through various workflows and information\nwithin the software application via a side panel menu.\n",
    "name": "Sidenav",
    "usage": "\nTake actions and or navigate through various workflows and information in relation to the content displayed in the application screen\n\nSidenav component has 3 named slots that you can use: header, auxiliary,\nand utilities. The `header` slot can be used at\nthe top of sidenav, where you might use a masthead or other components. The\n`auxliliary` slot can be used below the navigation items. If an icon for\nthe auxiliary slot is desired for the collapsible sidenav option, you may\nalso set the property `auxiliaryCollapsedIcon`. When the `auxiliary` slot\nis used, in a non-collapsed sidenav, there is no icon shown. The optional\n`<eds-icon>` provided by the `auxiliaryCollapsedIcon` property will only\nrender when the sidenav is collapsed. (See documentation for\n`auxiliaryCollapsedIcon` for more information.) The `utilities` slot can\n'be used at the bottom of sidenav, where you might use icons or other\ncomponents.\n\nHere is an example of all 3 slots being used. You can mix and match slots by your design needs:\n\n```html\n<eds-sidenav>\n  <div slot=\"header\">Header</div>\n  <div slot=\"auxiliary\">Auxiliary</div>\n  <div slot=\"utilities\">Utilities</div>\n</eds-sidenav>\n```\nHere is an example that shows how to specify utility slot within a collapsible side navigation.\n\n ```html\n<div slot=\"utilities\">\n  <div class=\"flex\">\n      <eds-icon load-method=\"name\" filename=\"ico-search-24\"></eds-icon>\n      <span>Search</span>\n  </div>\n  <div class=\"flex\">\n      <eds-icon load-method=\"name\" filename=\"ico-settings-24\"></eds-icon>\n      <span>Settings</span>\n  </div>\n</div>\n```\n\nThe following css variables are available for styling :\n\nCSS Variable | Description\n:----------------|:-------------\n--eds-navigation-container-background-color | Container background color for navigation/sidenav\n--eds-navigation-item-background-color | Background color for navigation/sidenav\n--eds-navigation-item-selected-background-color | Selected background color for navigation/sidenav\n--eds-navigation-color | Text color for navigation/sidenav\n--eds-navigation-subitem-color | Color for children of a main item\n--eds-navigation-selected-border | Main item border color for navigation/sidenav\n--eds-navigation-hover-border | Main item hover border color for navigation/sidenav\n--eds-sidenav-sub-item-border | Sub item border color for sidenav\n--eds-sidenav-main-item-selected-bg | Background color for a selected main item for sidenav\n--eds-sidenav-main-item-selected-color | Foreground color for a selected main item for sidenav\n--eds-sidenav-parent-container-box-shadow-color | Box shadow color for parent container of sidenav\n--eds-navigation-icon-color | Color for navigation icon\n--eds-navigation-sidenav-item-background-color | Background color for side navigation items\n--eds-navigation-utility-color | Color for sidenav main item utility\n",
    "browsers": "chrome, safari, firefox, ie11, edge\n",
    "workinprogress": "true\n",
    "version": "1.11.2"
  },
  "EDSSideNavModule": {
    "events": [
      {
        "name": "eds-sidenav-main-item-selected",
        "privacy": "public",
        "description": "Fired when a main item is selected and the sub menu will open.\nThe detail object will contain the item that has been selected\n"
      },
      {
        "name": "eds-sidenav-sub-item-selected",
        "privacy": "public",
        "description": "Fired when a sub item (in the panel) is selected.\nThe detail object will contain the item that has been selected and its parent(s) in an array\n"
      },
      {
        "name": "eds-sidenav-item-selected",
        "privacy": "public",
        "description": "Fired when an item (in the panel) is selected.\nThe detail object will contain the item that has been selected and its parent(s) in an array\n"
      }
    ],
    "properties": [],
    "methods": [],
    "version": "1.11.2"
  }
}